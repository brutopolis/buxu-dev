-- nelua bruter experiment

require "sequence"
require "io"
require "string"
require "C.stdlib"
require "C.string"


## if (#usize == 8) then
    local BruterValue = @union{
        i: int64,
        u: uint64,
        f: float64,
        p: pointer,
        s: cstring
    }
## else
    local BruterValue = @union{
        i: int32,
        u: uint32,
        f: float32,
        p: pointer,
        s: cstring
    }
## end

local BruterList = @record{
    values: sequence(BruterValue),
    keys: sequence(string),
    types: sequence(byte)
}

function BruterList:interpret(str: string)
    print("position", str:find("A"))
end

-- sequences works well, but
-- for some reason sequence is generating some invalid acess errors on valgrind
-- need to fix that ASAP
local vs: sequence(integer);
vs:push(564650);
print(vs[1]);

local strtest = "asdaksdmakdmka?AdaksdmakmdAdasmdaksmdlakdmsamA";
local buf = C.strdup(strtest);

local function strtok(str: cstring, delim: cstring <const>): cstring <cimport, nodecl, cinclude '<string.h>'>
end


C.free(buf);